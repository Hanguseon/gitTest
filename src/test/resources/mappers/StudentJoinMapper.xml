<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 -->
<mapper namespace="StudentJoinMapper">

	<!-- Beans클래스의 객체이름과 클래스이름을 명시한다. -->
	<resultMap id="student_professor_department"
		type="study.spring.hellospring.model.StudentProfessorDepartment">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="studno" column="studno" />
		<result property="name" column="name" />
		<result property="userid" column="userid" />
		<result property="grade" column="grade" />
		<result property="idnum" column="idnum" />
		<result property="birthdate" column="birthdate" />
		<result property="tel" column="tel" />
		<result property="height" column="height" />
		<result property="weight" column="weight" />
		<result property="deptno" column="deptno" />
		<result property="profno" column="profno" />
		<result property="dname" column="dname" />
		<result property="pname" column="pname" />
	</resultMap>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectStudentJoinList"
		parameterType="study.spring.hellospring.model.StudentProfessorDepartment"
		resultMap="student_professor_department">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		SELECT studno,s.name,s.userid,grade,idnum,birthdate,tel,height,weight,
		s.deptno,d.dname,s.profno,p.name AS pname
		From student s
		INNER JOIN
		department d ON s.deptno = d.deptno
		INNER JOIN professor p ON s.profno
		= p.profno

		<where>
			<if test="name != null and name != ''">
				s.name LIKE concat("%",#{name},"%")
			</if>
		</where>

		ORDER BY studno DESC
		LIMIT #{limitStart},#{listCount}
	</select>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectStudentJoinItem"
		parameterType="study.spring.hellospring.model.StudentProfessorDepartment"
		resultMap="student_professor_department">
		SELECT
		studno,s.name,s.userid,grade,idnum,birthdate,tel,height,weight,
		s.deptno,d.dname,s.profno,p.name AS pname
		From student s
		INNER JOIN
		department d ON s.deptno = d.deptno
		INNER JOIN professor p ON s.profno
		= p.profno
		WHERE studno=#{studno}

	</select>
	<!-- 조인 결과에 대한 전체 데이터 수 얻기 -->
	<select id="selectStudentCount"
		parameterType="study.spring.hellospring.model.StudentProfessorDepartment"
		resultType="int">
		SELECT count(studno)
		FROM student s INNER JOIN department d
		ON s.deptno = d.deptno
		INNER JOIN professor p ON s.profno=p.profno
		<where>
			<if test="name != null and name != ''">
				s.name LIKE concat("%",#{name},"%")
			</if>
		</where>
	</select>

</mapper>



















